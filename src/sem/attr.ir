# @.arg.{obj: Object, attr: string}
proc py_attrlookup {
    @.ret = @.arg.obj.dict[@.arg.attr];
    %jmptab = {};
    %jmptab[@.ret] = pop_stack;
    %jmptab[Undef] = py_type_attrlookup;
    jmp %jmptab[@.ret];
}

# @.arg.{obj: Object, attr: string}
proc py_type_attrlookup {
    @.frame.irlocals.i = 0;

    jmp py_type_attrlookup_body1;
}

proc py_type_attrlookup_body1 {
    @.ret = @.arg.obj.type.mro[@.frame.irlocals.i];

    %tab = {};
    %tab[@.ret] = py_type_attrlookup_body_2;
    %tab[Undef] = pop_stack_none;

    jmp %tab[@.ret];
}

proc py_type_attrlookup_body_2 {
    @.ret = @.ret.dict[@.arg.attr];

    %tab = {};
    %tab[@.ret] = pop_stack;
    %tab[Undef] = py_type_attrlookup_body1;

    @.frame.irlocals.i = @.frame.irlocals.i + 1;
    jmp %tab[@.ret];
}

###

# @.arg.{obj: Object, parents: List<TypeObject>}
# defines @.arg.obj.mro
proc add_mro {
    @.frame.irlocals.i = 0;

    @.arg.obj.mro = {};
    @.arg.obj.mro[0] = @.arg.obj;
    @.arg.obj.mro[1] = @.singletons.object; # might be overwritten later.

    %p = @.arg.parents[0];

    %tab = {};
    %tab[%p] = add_mro_loop;
    %tab[Undef] = pop_stack;

    jmp %tab[%p];
}

proc add_mro_loop {
    %v = @.arg.parents[0].mro[@.frame.irlocals.i];

    %tab = {};
    %tab[%v] = add_mro_loop;
    %tab[Undef] = pop_stack;

    @.arg.obj.mro[@.frame.irlocals.i + 1] = %v;
    @.frame.irlocals.i = @.frame.irlocals.i + 1;

    jmp %tab[%v];
}
