# @ :: Root
#
# struct Root {
#   singletons :: Symbol -> any    # predefined objects, that are used internally in the runtime
#   globals :: String -> Object    # global variables (user-facing)
#   frame :: Frame                 # the callstack
#   ret :: any                     # a register used to return values in. Will be carelessly overwritten whenever.
#   arg :: any                     # a register used to accept function arguments. Will be carelessly overwritten whenever.
# }
#
# struct Frame {
#   parent :: Frame | Undef
#   retpid :: ProcId | Undef       # when returning, jump back to this.
#   pylocals :: String -> Object   # pythons local variables
#   irlocals :: Symbol -> any      # local variables for the IR
# }
#
# includes PrimitiveObjects, TypeObjects (including classes), MethodObjects, and instances of classes
# struct Object {
#   type :: TypeObject             # type(obj)
#   dict :: any                    # the dict underlying __dict__
#   ...                            # case-specific addons
# }
#
# struct PrimitiveObject : Object {
#   type = @.singletons.function | @.singletons.none | @.singletons.bool | @.singletons.int | @.singletons.str
#   payload :: ProcId | Undef | True | False | int | str
# }
#
# struct TypeObject : Object {
#   mro :: List<TypeObject>
#   type = @.singletons.type
# }
#
# struct MethodObject : Object {
#   type = @.singletons.method
#   payload :: ProcId
#   self :: Object
# }
