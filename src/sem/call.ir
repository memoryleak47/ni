# @.arg.{f: Callable, args: List<Object>, suc: Pid}
proc py_call {
    %arg = @.arg;

    %ty = @.arg.f.type;
    %typemap = {};
    %typemap[%ty] = py_call_other;
    %typemap[@.singletons.function] = py_call_fn;
    %typemap[@.singletons.type] = py_call_class;
    jmp %typemap[%ty];
}

proc py_call_fn {
    %arg = @.arg;

    @.arg = {};
    @.arg.f = %arg.f.payload;
    @.arg.farg = %arg.args;
    @.arg.suc = %arg.suc;
    jmp call_fn;
}

proc py_call_class {
    @.frame.irlocals.py_call_arg = @.arg;

    @.arg = {};
    @.arg.ty = @.frame.irlocals.py_call_arg.f;
    @.arg.attr = "__init__";
    @.arg.suc = py_call_class_1;
    jmp py_type_attrlookup;
}

proc py_call_class_1 {
    # %constr :: FunctionObject | Undef
    %constr = @.ret;

    @.frame.irlocals.obj = {};
    @.frame.irlocals.obj.type = @.frame.irlocals.py_call_arg.f;
    @.frame.irlocals.obj.dict = {};

    %tab = {};
    %tab[%constr] = py_call_class_w_constructor;
    %tab[Undef] = py_call_class_done;
    jmp %tab[%constr];
}

proc py_call_class_w_constructor {
    %constr = @.ret.payload;

    @.arg = {};
    @.arg.f = %constr;
    @.arg.farg = @.frame.irlocals.py_call_arg.args;
    @.arg.suc = py_call_class_done;
    jmp call_fn;
}

proc py_call_class_done {
    @.ret = @.frame.irlocals.obj;
    jmp @.frame.irlocals.py_call_arg.suc;
}

proc py_call_other {
    panic "todo!";
}
