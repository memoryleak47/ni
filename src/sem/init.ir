#
main proc init {
    # setup singletons
    @.singletons = {};
        @.singletons.function = {}; # the `function` type.


        # the `int` type.
        %int = {};
            %int.dict = {};

            %add_fn = {};
            %add_fn.type = @.singletons.function;
            %add_fn.payload = payload_add;

            %int.dict["__add__"] = %add_fn;
        @.singletons.int = %int;

        @.singletons.str = {};      # the `str` type.
        @.singletons.bool = {};     # the `bool` type.
        @.singletons.none = {};     # the unique `None` value.

    # setup globals
    @.globals = {};

    # setup print
    %print_fn = {};
    %print_fn.type = @.singletons.function;
    %print_fn.payload = print_fn;
    @.globals["print"] = %print_fn;

    # setup callstack
    %frame = {};
    %frame.parent = undef;
    %frame.arg = {};
    %frame.retval = {};
    %frame.retpid = fin;
    %frame.pylocals = @.globals;
    %frame.irlocals = {};
    @.frame = %frame;

    jmp userstart;
}

proc print_fn {
    %f = @.frame;
    print %f.arg[0].payload;
    %f.retval.v = @.singletons.none;
    @.frame = %f.parent;
    jmp %f.retpid;
}

# @.frame.arg{0, 1}
proc payload_add {
    @.frame.retval = @.frame.arg[0].payload + @.frame.arg[1].payload;
    %retpid = @.frame.retpid;
    @.frame = @.frame.parent;
    jmp %retpid;
}

proc fin {
    exit;
}
